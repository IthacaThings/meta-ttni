#!/bin/sh

bitbake="../mlinux-be/bitbake_ml"
image="ttni-base-image"
machines="mtcap mtcdt"
image_root="build/tmp/deploy/images"
feed_root="build/tmp/deploy/ipk"
progname=$(basename $0)

remote_host=abomination.dreamhost.com
remote_root=ttni.tech/mlinux

do_build=yes
do_delete=
do_verbose=
do_noop=

verbose () {
    test -n "${do_verbose}" && echo "${*}"
}

while [ $# -gt 0 ]; do
    case "${1}" in
	--delete)
	    do_delete=--delete
	    shift
	    ;;
	--no-build|--nobuild)
	    do_build=
	    shift
	    ;;
	-x)
	    set -x
	    shift
	    ;;
	-v)
	    do_verbose=-v
	    shift
	    ;;
	-n)
	    do_noop=-n
	    shift
	    ;;
	*)
	    break
	    ;;
    esac
done

if [ $# != 1 ]; then
   echo "${progname}: Usage VERSION" >&2
   exit 1
fi

version=$1

# Build the two images
if [ -n "${do_build}" ]; then
    for machine in ${machines}; do
	verbose Building for ${machine}
	MACHINE=${machine} ${bitbake} ${image} || exit 1
    done
fi

# Copy the images to the distribution server
for machine in ${machines}; do
    verbose Sending image for ${machine}
    local_image_dir="${image_root}/${machine}"
    image_file="${image}-${machine}-upgrade.bin"
    if [ ! -f "${local_image_dir}/${image_file}" ]; then
	echo "${progname}: image ${local_image_dir_file} does not exist" >&2
	exit 1
    fi
    remote_image_dir="${remote_root}/images/${machine}/${version}"
    ssh ${remote_host} mkdir -p "${remote_image_dir}" || exit 1

    (
	cd "${local_image_dir}" || exit 1
	md5sum "${image_file}" > md5sums.txt || exit 1
	chmod u+rwX,og+rX md5sums.txt "${image_file}"
	rsync -a ${do_verbose} ${do_noop} --checksum ${do_delete} md5sums.txt "${image_file}" ${remote_host}:${remote_image_dir} || exit 1
    )
done

# Copy the package feeds to the distribution server
for machine in ${machines}; do
    verbose Building package-index for ${machine}
    MACHINE=${machine} ${bitbake} package-index || exit 1
done
(
    cd "${feed_root}" || exit 1
    test -s Packages || rm -f Packages

    remote_feed_dir="${remote_root}/feeds/${version}"
    ssh ${remote_host} mkdir -p "${remote_feed_dir}" || exit 1

    verbose Sending feeds
    chmod u+rwX,og+rX *
    rsync -a ${do_verbose} ${do_noop} ${do_delete} * "${remote_host}:${remote_feed_dir}" || exit 1
)
